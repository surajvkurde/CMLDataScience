# -*- coding: utf-8 -*-
"""haberman_EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HR1Qqk7dXVrXn4t5XwKN9RkKrFmzL1Is
"""

import pandas as pd
df=pd.read_csv("haberman.csv")
df

df.head(10)

df.columns

df['status'].value_counts()

df.info()

import matplotlib.pyplot as plt
import seaborn as sns

df.plot(kind="scatter",x="age",y="year")
plt.xlabel("Age")
plt.ylabel("Year")
plt.show()

sns.FacetGrid(df,hue="status",height=4).map(plt.scatter,"age","year")

sns.FacetGrid(df,hue="status",height=4).map(plt.scatter,"age","nodes").add_legend()

sns.pairplot(df,hue="status",height=4)

sns.pairplot(df,hue="age",height=4)

sns.boxplot(x="year",y="nodes",data=df)

sns.violinplot(x="year",y="nodes",data=df)

from sklearn.metrics import accuracy_score
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
df

y=df['status']
x=df[['age','year','nodes']]
x.shape,y.shape

X_train,X_test,y_train,y_test=train_test_split(x,y,test_size=0.3)

X_train.shape, X_test.shape, y_train.shape, y_test.shape

min=1
bestK=0
for i in  range (1,30,2):
    neigh = KNeighborsClassifier(n_neighbors=i)
    neigh.fit(X_train, y_train)
    
    y_pred_train=neigh.predict(X_train)
    accuracy_train=accuracy_score(y_train, y_pred_train)
    
    y_pred_test=neigh.predict(X_test)
    accuracy_test=accuracy_score(y_test, y_pred_test)
    
    if accuracy_train-accuracy_test<min:
      min=accuracy_train-accuracy_test
      bestK=i
      print('K value',i)
      print('*'*50)
      print('Accuracy for train data ',accuracy_train)
      print('Accuracy for test data',accuracy_test)
      print('*'*50)
      print('-'*50)
print("K should be ",bestK)

print(y_pred_train)

print(y_pred_test)

neigh

neigh.predict_proba(X_test)

